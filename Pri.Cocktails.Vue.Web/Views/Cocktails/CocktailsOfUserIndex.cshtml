<div id="app" class="d-flex flex-column">
    <div class="mb-3 w-100">
        <a type="button" class="btn btn-success ms-4" href="create">Create cocktail</a>
    </div>
    <article v-if="isLoaded" class="d-flex flex-wrap" id="scroll">
        <section v-for="cocktail in cocktails" class="d-flex flex-column flex-wrap cocktail-section m-1 mb-5">
            <div class="d-flex justify-content-end">
                <input type="button" class="btn btn-danger m-1" v-on:click.prevent="deleteCocktail(cocktail.id)" value="Delete">
                <a v-on:click="updateCocktail(cocktail.id)" class="btn btn-primary m-1 mr-2">Update</a>
                <input type="button" v-bind:id="cocktail.id" v-on:click="getDetails(cocktail.id)" class="btn btn-primary m-1 mr-2" value="Details">
            </div>
            <div class="d-flex justify-content-center align-items-center mb-2">
                <div class="d-flex justify-content-center align-items-center flex-column mb-2">
                    <h3 class="title">{{cocktail.name}}</h3>
                    <img class="picture-big" v-bind:src="cocktail.picture" />
                </div>
            </div>
        </section>
    </article>
    <div v-else class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

@section scripts{
    <script>
var cocktailsOfUserapiURL = 'https://localhost:44394/api/Cocktails/user';
var axiosConfig = { headers: { Authorization: `Bearer ${localStorage.getItem("token")}` } };

var app = new Vue({
    el: "#app",
    data: {
        cocktails: null,
        error: false,
        isLoaded : false,
        cocktailIsDeleted : false,
    },
    created: async function () {
        let token = localStorage.getItem('token');

        if (token == null) {
            window.location.href = "/account/login";
        }
        this.cocktails = await this.fetchCocktails();        
    },
    methods: {
        fetchCocktails: async function () {
            let response = "";
            response = await axios.get(cocktailsOfUserapiURL, axiosConfig)
                .then(response => response)                
                .catch(error => {
                    this.error = true
                })
                .finally(() => { this.isLoaded = true });
            if (this.error == false) {
                return response.data;
            }
        },
        getDetails: function (id) {
            window.location.href = `../cocktails/details/${id}`

        },
        deleteCocktail: async function (id) {
            this.isLoaded = false;
            let deleteUrl = "https://localhost:44394/api/Cocktails/";
            const axiosConfig = {
                headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
                params: {
                    ID: id
                },
            };
            await axios.delete(deleteUrl, axiosConfig)
                .then(response => response)
                .catch(error =>
                    console.log(error));                
            this.cocktails = await this.fetchCocktails();
        },
        updateCocktail: function (id) {
            window.location.href = `update/${id}`;
        }
    }
});
    </script>
}
